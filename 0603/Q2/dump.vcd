$date
	Wed May 31 13:49:50 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module Test $end
$var wire 3 ! O_if [2:0] $end
$var wire 3 " O_gate [2:0] $end
$var wire 3 # O_case [2:0] $end
$var wire 3 $ O [2:0] $end
$var reg 3 % I [2:0] $end
$scope module assign_test $end
$var wire 3 & I [2:0] $end
$var wire 3 ' I_not [2:0] $end
$var wire 1 ( or12 $end
$var wire 1 ) or123 $end
$var wire 1 * temp1 $end
$var wire 1 + temp2 $end
$var wire 1 , temp3 $end
$var wire 1 - temp4 $end
$var wire 1 . temp5 $end
$var wire 3 / O [2:0] $end
$upscope $end
$scope module gate $end
$var wire 3 0 I [2:0] $end
$var wire 3 1 I_not [2:0] $end
$var wire 1 2 temp1 $end
$var wire 1 3 temp2 $end
$var wire 1 4 temp3 $end
$var wire 1 5 temp4 $end
$var wire 1 6 temp5 $end
$var wire 3 7 O [2:0] $end
$upscope $end
$scope module gate_case $end
$var wire 3 8 I [2:0] $end
$var wire 3 9 I_not [2:0] $end
$var reg 3 : O [2:0] $end
$upscope $end
$scope module gate_if $end
$var wire 3 ; I [2:0] $end
$var wire 3 < I_not [2:0] $end
$var wire 1 = Test $end
$var reg 3 > O [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b11 >
1=
b111 <
b0 ;
b11 :
b111 9
b0 8
b11 7
06
05
04
03
12
b111 1
b0 0
b11 /
0.
0-
0,
0+
1*
0)
1(
b111 '
b0 &
b0 %
b11 $
b11 #
b11 "
b11 !
$end
#100
0=
02
b100 "
b100 7
0(
0*
16
b110 '
b100 $
b100 /
1)
1.
b110 1
b110 9
b100 !
b100 >
b100 #
b100 :
b110 <
b1 %
b1 &
b1 0
b1 8
b1 ;
#200
b101 "
b101 7
15
06
b101 '
0(
0+
1-
b101 $
b101 /
1)
0.
b101 1
b101 9
b101 #
b101 :
b101 !
b101 >
b101 <
b10 %
b10 &
b10 0
b10 8
b10 ;
#300
b110 "
b110 7
1=
13
16
b100 '
b110 $
b110 /
1(
1+
1.
b100 1
b100 9
b110 !
b110 >
b110 #
b110 :
b100 <
b11 %
b11 &
b11 0
b11 8
b11 ;
#400
12
14
b111 "
b111 7
1=
1*
1,
03
05
06
b11 '
1(
0+
b111 $
b111 /
1)
0-
0.
b11 1
b11 9
b111 #
b111 :
b111 !
b111 >
b11 <
b100 %
b100 &
b100 0
b100 8
b100 ;
#500
0=
b0 "
b0 7
02
04
0(
0*
b0 $
b0 /
0)
0,
b10 '
b10 1
b10 9
b0 !
b0 >
b0 #
b0 :
b10 <
b101 %
b101 &
b101 0
b101 8
b101 ;
#600
b1 "
b1 7
0)
0,
b1 '
b1 $
b1 /
0(
0+
b1 1
b1 9
b1 #
b1 :
b1 !
b1 >
b1 <
b110 %
b110 &
b110 0
b110 8
b110 ;
#700
b10 "
b10 7
1=
13
b0 '
b10 $
b10 /
1(
1+
b0 1
b0 9
b10 !
b10 >
b10 #
b10 :
b0 <
b111 %
b111 &
b111 0
b111 8
b111 ;
#800
